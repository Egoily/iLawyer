<UserControl x:Name="uc"  x:Class="ee.iLawyer.UserControls.CategoryPropertyPicker"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:ee.iLawyer.UserControls"
             xmlns:converters="clr-namespace:ee.iLawyer.Converters"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
          >

    <Grid x:Name="grid">
        <Grid.Resources>
            <converters:DatabindingDebugConverter x:Key="debugConverter" />
            <local:PickerTypeToVisible x:Key="PickerTypeToVisible"/>
            <local:PickerTypeToHidden x:Key="PickerTypeToHidden"/>
            <local:StringToPackIconKind x:Key="StringToPackIconKind"/>

        </Grid.Resources>
        <ScrollViewer x:Name="scrollViewer"  ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="40"></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <ItemsControl x:Name="itemsControl"   
                          Grid.Row="0"
                          Background="Transparent" 
                          ItemsSource="{Binding Path=CategoryValues ,RelativeSource={RelativeSource AncestorType={x:Type UserControl}},Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0,4,0,4" Width="{Binding Path=Width,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100*"/>
                                    <ColumnDefinition Width="46"/>
                                </Grid.ColumnDefinitions>
                                <Grid x:Name="templateGrid">
                                    <local:CategoryTextBox Grid.Column="0"
                                                   CategorySource="{Binding Path=CategorySource ,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                                   CategoryValue="{Binding ElementName=templateGrid, Path=DataContext}"
                                                   ></local:CategoryTextBox>
                                </Grid>
                                <Border Grid.Column="1" Background="Transparent" >
                                    <StackPanel Orientation="Horizontal">
                                        <Button x:Name="btnRemove" 
                                                Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" 
                                                Margin="8,0,0,0"
                                                Width="20" Height="20"  
                                                Background="Transparent"
                                                Visibility="Hidden"
                                                Click="btnRemove_Click"  
                                        >
                                            <materialDesign:PackIcon Kind="RemoveCircle"  Width="16" Height="16" />
                                        </Button>

                                    </StackPanel>
                                </Border>
                            </Grid>


                            <DataTemplate.Triggers>
                                <!--<MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition  Binding="{Binding CategoryId}" Value="0"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter TargetName="btnRemove" Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>-->
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="btnRemove" Property="Visibility" Value="Visible"/>
                                </Trigger>
                            </DataTemplate.Triggers>

                        </DataTemplate>

                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <materialDesign:Chip Grid.Row="1" 
                                     Margin="10,2,10,2"
                                     Content="添加属性项"
                                     IconBackground="{DynamicResource PrimaryHueDarkBrush}"
                                     IconForeground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                     Click="btnAdd_Click"
                 >
                    <materialDesign:Chip.Icon>
                        <materialDesign:PackIcon  Kind="AddBox"></materialDesign:PackIcon>
                    </materialDesign:Chip.Icon>
                </materialDesign:Chip>
            </Grid>
        </ScrollViewer>


    </Grid>
</UserControl>
